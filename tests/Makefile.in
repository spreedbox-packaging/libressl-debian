# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.am.common
TESTS = $(am__append_1) aes_wrap$(EXEEXT) asn1test$(EXEEXT) \
	base64test$(EXEEXT) bftest$(EXEEXT) bntest$(EXEEXT) \
	casttest$(EXEEXT) chachatest$(EXEEXT) cts128test$(EXEEXT) \
	destest$(EXEEXT) dhtest$(EXEEXT) dsatest$(EXEEXT) \
	ecdhtest$(EXEEXT) ecdsatest$(EXEEXT) ectest$(EXEEXT) \
	enginetest$(EXEEXT) explicit_bzero$(EXEEXT) exptest$(EXEEXT) \
	gcm128test$(EXEEXT) hmactest$(EXEEXT) ideatest$(EXEEXT) \
	igetest$(EXEEXT) md4test$(EXEEXT) md5test$(EXEEXT) \
	mdc2test$(EXEEXT) mont$(EXEEXT) pkcs7test$(EXEEXT) \
	poly1305test$(EXEEXT) randtest$(EXEEXT) rc2test$(EXEEXT) \
	rc4test$(EXEEXT) rmdtest$(EXEEXT) sha1test$(EXEEXT) \
	sha256test$(EXEEXT) sha512test$(EXEEXT) shatest$(EXEEXT) \
	timingsafe$(EXEEXT) utf8test$(EXEEXT) aeadtest.sh evptest.sh \
	pq_test.sh ssltest.sh arc4randomforktest.sh
check_PROGRAMS = aeadtest$(EXEEXT) aes_wrap$(EXEEXT) \
	arc4randomforktest$(EXEEXT) asn1test$(EXEEXT) \
	base64test$(EXEEXT) bftest$(EXEEXT) biotest$(EXEEXT) \
	bntest$(EXEEXT) casttest$(EXEEXT) chachatest$(EXEEXT) \
	cts128test$(EXEEXT) destest$(EXEEXT) dhtest$(EXEEXT) \
	dsatest$(EXEEXT) ecdhtest$(EXEEXT) ecdsatest$(EXEEXT) \
	ectest$(EXEEXT) enginetest$(EXEEXT) evptest$(EXEEXT) \
	explicit_bzero$(EXEEXT) exptest$(EXEEXT) gcm128test$(EXEEXT) \
	hmactest$(EXEEXT) ideatest$(EXEEXT) igetest$(EXEEXT) \
	md4test$(EXEEXT) md5test$(EXEEXT) mdc2test$(EXEEXT) \
	mont$(EXEEXT) pidwraptest$(EXEEXT) pkcs7test$(EXEEXT) \
	poly1305test$(EXEEXT) pq_test$(EXEEXT) randtest$(EXEEXT) \
	rc2test$(EXEEXT) rc4test$(EXEEXT) rmdtest$(EXEEXT) \
	sha1test$(EXEEXT) sha256test$(EXEEXT) sha512test$(EXEEXT) \
	shatest$(EXEEXT) ssltest$(EXEEXT) timingsafe$(EXEEXT) \
	utf8test$(EXEEXT)
@NO_ARC4RANDOM_BUF_FALSE@am__append_1 = pidwraptest.sh
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_aeadtest_OBJECTS = aeadtest.$(OBJEXT)
aeadtest_OBJECTS = $(am_aeadtest_OBJECTS)
aeadtest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am_aes_wrap_OBJECTS = aes_wrap.$(OBJEXT)
aes_wrap_OBJECTS = $(am_aes_wrap_OBJECTS)
aes_wrap_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_arc4randomforktest_OBJECTS = arc4randomforktest.$(OBJEXT)
arc4randomforktest_OBJECTS = $(am_arc4randomforktest_OBJECTS)
arc4randomforktest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_asn1test_OBJECTS = asn1test.$(OBJEXT)
asn1test_OBJECTS = $(am_asn1test_OBJECTS)
asn1test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_base64test_OBJECTS = base64test.$(OBJEXT)
base64test_OBJECTS = $(am_base64test_OBJECTS)
base64test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_bftest_OBJECTS = bftest.$(OBJEXT)
bftest_OBJECTS = $(am_bftest_OBJECTS)
bftest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_biotest_OBJECTS = biotest.$(OBJEXT)
biotest_OBJECTS = $(am_biotest_OBJECTS)
biotest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_bntest_OBJECTS = bntest.$(OBJEXT)
bntest_OBJECTS = $(am_bntest_OBJECTS)
bntest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_casttest_OBJECTS = casttest.$(OBJEXT)
casttest_OBJECTS = $(am_casttest_OBJECTS)
casttest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_chachatest_OBJECTS = chachatest.$(OBJEXT)
chachatest_OBJECTS = $(am_chachatest_OBJECTS)
chachatest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_cts128test_OBJECTS = cts128test.$(OBJEXT)
cts128test_OBJECTS = $(am_cts128test_OBJECTS)
cts128test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_destest_OBJECTS = destest.$(OBJEXT)
destest_OBJECTS = $(am_destest_OBJECTS)
destest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_dhtest_OBJECTS = dhtest.$(OBJEXT)
dhtest_OBJECTS = $(am_dhtest_OBJECTS)
dhtest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_dsatest_OBJECTS = dsatest.$(OBJEXT)
dsatest_OBJECTS = $(am_dsatest_OBJECTS)
dsatest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_ecdhtest_OBJECTS = ecdhtest.$(OBJEXT)
ecdhtest_OBJECTS = $(am_ecdhtest_OBJECTS)
ecdhtest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_ecdsatest_OBJECTS = ecdsatest.$(OBJEXT)
ecdsatest_OBJECTS = $(am_ecdsatest_OBJECTS)
ecdsatest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_ectest_OBJECTS = ectest.$(OBJEXT)
ectest_OBJECTS = $(am_ectest_OBJECTS)
ectest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_enginetest_OBJECTS = enginetest.$(OBJEXT)
enginetest_OBJECTS = $(am_enginetest_OBJECTS)
enginetest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_evptest_OBJECTS = evptest.$(OBJEXT)
evptest_OBJECTS = $(am_evptest_OBJECTS)
evptest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_explicit_bzero_OBJECTS = explicit_bzero.$(OBJEXT) memmem.$(OBJEXT)
explicit_bzero_OBJECTS = $(am_explicit_bzero_OBJECTS)
explicit_bzero_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_exptest_OBJECTS = exptest.$(OBJEXT)
exptest_OBJECTS = $(am_exptest_OBJECTS)
exptest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_gcm128test_OBJECTS = gcm128test.$(OBJEXT)
gcm128test_OBJECTS = $(am_gcm128test_OBJECTS)
gcm128test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_hmactest_OBJECTS = hmactest.$(OBJEXT)
hmactest_OBJECTS = $(am_hmactest_OBJECTS)
hmactest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_ideatest_OBJECTS = ideatest.$(OBJEXT)
ideatest_OBJECTS = $(am_ideatest_OBJECTS)
ideatest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_igetest_OBJECTS = igetest.$(OBJEXT)
igetest_OBJECTS = $(am_igetest_OBJECTS)
igetest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_md4test_OBJECTS = md4test.$(OBJEXT)
md4test_OBJECTS = $(am_md4test_OBJECTS)
md4test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_md5test_OBJECTS = md5test.$(OBJEXT)
md5test_OBJECTS = $(am_md5test_OBJECTS)
md5test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_mdc2test_OBJECTS = mdc2test.$(OBJEXT)
mdc2test_OBJECTS = $(am_mdc2test_OBJECTS)
mdc2test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_mont_OBJECTS = mont.$(OBJEXT)
mont_OBJECTS = $(am_mont_OBJECTS)
mont_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_pidwraptest_OBJECTS = pidwraptest.$(OBJEXT)
pidwraptest_OBJECTS = $(am_pidwraptest_OBJECTS)
pidwraptest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_pkcs7test_OBJECTS = pkcs7test.$(OBJEXT)
pkcs7test_OBJECTS = $(am_pkcs7test_OBJECTS)
pkcs7test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_poly1305test_OBJECTS = poly1305test.$(OBJEXT)
poly1305test_OBJECTS = $(am_poly1305test_OBJECTS)
poly1305test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_pq_test_OBJECTS = pq_test.$(OBJEXT)
pq_test_OBJECTS = $(am_pq_test_OBJECTS)
pq_test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_randtest_OBJECTS = randtest.$(OBJEXT)
randtest_OBJECTS = $(am_randtest_OBJECTS)
randtest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_rc2test_OBJECTS = rc2test.$(OBJEXT)
rc2test_OBJECTS = $(am_rc2test_OBJECTS)
rc2test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_rc4test_OBJECTS = rc4test.$(OBJEXT)
rc4test_OBJECTS = $(am_rc4test_OBJECTS)
rc4test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_rmdtest_OBJECTS = rmdtest.$(OBJEXT)
rmdtest_OBJECTS = $(am_rmdtest_OBJECTS)
rmdtest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_sha1test_OBJECTS = sha1test.$(OBJEXT)
sha1test_OBJECTS = $(am_sha1test_OBJECTS)
sha1test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_sha256test_OBJECTS = sha256test.$(OBJEXT)
sha256test_OBJECTS = $(am_sha256test_OBJECTS)
sha256test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_sha512test_OBJECTS = sha512test.$(OBJEXT)
sha512test_OBJECTS = $(am_sha512test_OBJECTS)
sha512test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_shatest_OBJECTS = shatest.$(OBJEXT)
shatest_OBJECTS = $(am_shatest_OBJECTS)
shatest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_ssltest_OBJECTS = ssltest.$(OBJEXT)
ssltest_OBJECTS = $(am_ssltest_OBJECTS)
ssltest_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_timingsafe_OBJECTS = timingsafe.$(OBJEXT)
timingsafe_OBJECTS = $(am_timingsafe_OBJECTS)
timingsafe_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
am_utf8test_OBJECTS = utf8test.$(OBJEXT)
utf8test_OBJECTS = $(am_utf8test_OBJECTS)
utf8test_DEPENDENCIES = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(aeadtest_SOURCES) $(aes_wrap_SOURCES) \
	$(arc4randomforktest_SOURCES) $(asn1test_SOURCES) \
	$(base64test_SOURCES) $(bftest_SOURCES) $(biotest_SOURCES) \
	$(bntest_SOURCES) $(casttest_SOURCES) $(chachatest_SOURCES) \
	$(cts128test_SOURCES) $(destest_SOURCES) $(dhtest_SOURCES) \
	$(dsatest_SOURCES) $(ecdhtest_SOURCES) $(ecdsatest_SOURCES) \
	$(ectest_SOURCES) $(enginetest_SOURCES) $(evptest_SOURCES) \
	$(explicit_bzero_SOURCES) $(exptest_SOURCES) \
	$(gcm128test_SOURCES) $(hmactest_SOURCES) $(ideatest_SOURCES) \
	$(igetest_SOURCES) $(md4test_SOURCES) $(md5test_SOURCES) \
	$(mdc2test_SOURCES) $(mont_SOURCES) $(pidwraptest_SOURCES) \
	$(pkcs7test_SOURCES) $(poly1305test_SOURCES) \
	$(pq_test_SOURCES) $(randtest_SOURCES) $(rc2test_SOURCES) \
	$(rc4test_SOURCES) $(rmdtest_SOURCES) $(sha1test_SOURCES) \
	$(sha256test_SOURCES) $(sha512test_SOURCES) $(shatest_SOURCES) \
	$(ssltest_SOURCES) $(timingsafe_SOURCES) $(utf8test_SOURCES)
DIST_SOURCES = $(aeadtest_SOURCES) $(aes_wrap_SOURCES) \
	$(arc4randomforktest_SOURCES) $(asn1test_SOURCES) \
	$(base64test_SOURCES) $(bftest_SOURCES) $(biotest_SOURCES) \
	$(bntest_SOURCES) $(casttest_SOURCES) $(chachatest_SOURCES) \
	$(cts128test_SOURCES) $(destest_SOURCES) $(dhtest_SOURCES) \
	$(dsatest_SOURCES) $(ecdhtest_SOURCES) $(ecdsatest_SOURCES) \
	$(ectest_SOURCES) $(enginetest_SOURCES) $(evptest_SOURCES) \
	$(explicit_bzero_SOURCES) $(exptest_SOURCES) \
	$(gcm128test_SOURCES) $(hmactest_SOURCES) $(ideatest_SOURCES) \
	$(igetest_SOURCES) $(md4test_SOURCES) $(md5test_SOURCES) \
	$(mdc2test_SOURCES) $(mont_SOURCES) $(pidwraptest_SOURCES) \
	$(pkcs7test_SOURCES) $(poly1305test_SOURCES) \
	$(pq_test_SOURCES) $(randtest_SOURCES) $(rc2test_SOURCES) \
	$(rc4test_SOURCES) $(rmdtest_SOURCES) $(sha1test_SOURCES) \
	$(sha256test_SOURCES) $(sha512test_SOURCES) $(shatest_SOURCES) \
	$(ssltest_SOURCES) $(timingsafe_SOURCES) $(utf8test_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PLATFORM_LDADD = @PLATFORM_LDADD@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USER_CFLAGS = @USER_CFLAGS@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I$(top_srcdir)/include -DHAVE_CRYPTODEV \
	-DLIBRESSL_INTERNAL -I $(top_srcdir)/crypto/modes -I \
	$(top_srcdir)/crypto/asn1
EXTRA_DIST = aeadtest.sh evptest.sh pq_test.sh ssltest.sh \
	arc4randomforktest.sh pidwraptest.sh aeadtests.txt \
	evptests.txt pq_expected.txt testssl ca.pem server.pem
aeadtest_SOURCES = aeadtest.c
aeadtest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
aes_wrap_SOURCES = aes_wrap.c
aes_wrap_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
arc4randomforktest_SOURCES = arc4randomforktest.c
arc4randomforktest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
asn1test_SOURCES = asn1test.c
asn1test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
base64test_SOURCES = base64test.c
base64test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
bftest_SOURCES = bftest.c
bftest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
biotest_SOURCES = biotest.c
biotest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
bntest_SOURCES = bntest.c
bntest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
casttest_SOURCES = casttest.c
casttest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
chachatest_SOURCES = chachatest.c
chachatest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
cts128test_SOURCES = cts128test.c
cts128test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
destest_SOURCES = destest.c
destest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
dhtest_SOURCES = dhtest.c
dhtest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
dsatest_SOURCES = dsatest.c
dsatest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
ecdhtest_SOURCES = ecdhtest.c
ecdhtest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
ecdsatest_SOURCES = ecdsatest.c
ecdsatest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
ectest_SOURCES = ectest.c
ectest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
enginetest_SOURCES = enginetest.c
enginetest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
evptest_SOURCES = evptest.c
evptest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
explicit_bzero_SOURCES = explicit_bzero.c memmem.c
explicit_bzero_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
exptest_SOURCES = exptest.c
exptest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
gcm128test_SOURCES = gcm128test.c
gcm128test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
hmactest_SOURCES = hmactest.c
hmactest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
ideatest_SOURCES = ideatest.c
ideatest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
igetest_SOURCES = igetest.c
igetest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
md4test_SOURCES = md4test.c
md4test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
md5test_SOURCES = md5test.c
md5test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
mdc2test_SOURCES = mdc2test.c
mdc2test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
mont_SOURCES = mont.c
mont_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
pidwraptest_SOURCES = pidwraptest.c
pidwraptest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
pkcs7test_SOURCES = pkcs7test.c
pkcs7test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
poly1305test_SOURCES = poly1305test.c
poly1305test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
pq_test_SOURCES = pq_test.c
pq_test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
randtest_SOURCES = randtest.c
randtest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
rc2test_SOURCES = rc2test.c
rc2test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
rc4test_SOURCES = rc4test.c
rc4test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
rmdtest_SOURCES = rmdtest.c
rmdtest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
sha1test_SOURCES = sha1test.c
sha1test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
sha256test_SOURCES = sha256test.c
sha256test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
sha512test_SOURCES = sha512test.c
sha512test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
shatest_SOURCES = shatest.c
shatest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
ssltest_SOURCES = ssltest.c
ssltest_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
timingsafe_SOURCES = timingsafe.c
timingsafe_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
utf8test_SOURCES = utf8test.c
utf8test_LDADD = $(top_builddir)/ssl/libssl.la \
	$(top_builddir)/crypto/libcrypto.la
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.am.common:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
aeadtest$(EXEEXT): $(aeadtest_OBJECTS) $(aeadtest_DEPENDENCIES) $(EXTRA_aeadtest_DEPENDENCIES) 
	@rm -f aeadtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aeadtest_OBJECTS) $(aeadtest_LDADD) $(LIBS)
aes_wrap$(EXEEXT): $(aes_wrap_OBJECTS) $(aes_wrap_DEPENDENCIES) $(EXTRA_aes_wrap_DEPENDENCIES) 
	@rm -f aes_wrap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_wrap_OBJECTS) $(aes_wrap_LDADD) $(LIBS)
arc4randomforktest$(EXEEXT): $(arc4randomforktest_OBJECTS) $(arc4randomforktest_DEPENDENCIES) $(EXTRA_arc4randomforktest_DEPENDENCIES) 
	@rm -f arc4randomforktest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(arc4randomforktest_OBJECTS) $(arc4randomforktest_LDADD) $(LIBS)
asn1test$(EXEEXT): $(asn1test_OBJECTS) $(asn1test_DEPENDENCIES) $(EXTRA_asn1test_DEPENDENCIES) 
	@rm -f asn1test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(asn1test_OBJECTS) $(asn1test_LDADD) $(LIBS)
base64test$(EXEEXT): $(base64test_OBJECTS) $(base64test_DEPENDENCIES) $(EXTRA_base64test_DEPENDENCIES) 
	@rm -f base64test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(base64test_OBJECTS) $(base64test_LDADD) $(LIBS)
bftest$(EXEEXT): $(bftest_OBJECTS) $(bftest_DEPENDENCIES) $(EXTRA_bftest_DEPENDENCIES) 
	@rm -f bftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bftest_OBJECTS) $(bftest_LDADD) $(LIBS)
biotest$(EXEEXT): $(biotest_OBJECTS) $(biotest_DEPENDENCIES) $(EXTRA_biotest_DEPENDENCIES) 
	@rm -f biotest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(biotest_OBJECTS) $(biotest_LDADD) $(LIBS)
bntest$(EXEEXT): $(bntest_OBJECTS) $(bntest_DEPENDENCIES) $(EXTRA_bntest_DEPENDENCIES) 
	@rm -f bntest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bntest_OBJECTS) $(bntest_LDADD) $(LIBS)
casttest$(EXEEXT): $(casttest_OBJECTS) $(casttest_DEPENDENCIES) $(EXTRA_casttest_DEPENDENCIES) 
	@rm -f casttest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(casttest_OBJECTS) $(casttest_LDADD) $(LIBS)
chachatest$(EXEEXT): $(chachatest_OBJECTS) $(chachatest_DEPENDENCIES) $(EXTRA_chachatest_DEPENDENCIES) 
	@rm -f chachatest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(chachatest_OBJECTS) $(chachatest_LDADD) $(LIBS)
cts128test$(EXEEXT): $(cts128test_OBJECTS) $(cts128test_DEPENDENCIES) $(EXTRA_cts128test_DEPENDENCIES) 
	@rm -f cts128test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cts128test_OBJECTS) $(cts128test_LDADD) $(LIBS)
destest$(EXEEXT): $(destest_OBJECTS) $(destest_DEPENDENCIES) $(EXTRA_destest_DEPENDENCIES) 
	@rm -f destest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(destest_OBJECTS) $(destest_LDADD) $(LIBS)
dhtest$(EXEEXT): $(dhtest_OBJECTS) $(dhtest_DEPENDENCIES) $(EXTRA_dhtest_DEPENDENCIES) 
	@rm -f dhtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dhtest_OBJECTS) $(dhtest_LDADD) $(LIBS)
dsatest$(EXEEXT): $(dsatest_OBJECTS) $(dsatest_DEPENDENCIES) $(EXTRA_dsatest_DEPENDENCIES) 
	@rm -f dsatest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dsatest_OBJECTS) $(dsatest_LDADD) $(LIBS)
ecdhtest$(EXEEXT): $(ecdhtest_OBJECTS) $(ecdhtest_DEPENDENCIES) $(EXTRA_ecdhtest_DEPENDENCIES) 
	@rm -f ecdhtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ecdhtest_OBJECTS) $(ecdhtest_LDADD) $(LIBS)
ecdsatest$(EXEEXT): $(ecdsatest_OBJECTS) $(ecdsatest_DEPENDENCIES) $(EXTRA_ecdsatest_DEPENDENCIES) 
	@rm -f ecdsatest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ecdsatest_OBJECTS) $(ecdsatest_LDADD) $(LIBS)
ectest$(EXEEXT): $(ectest_OBJECTS) $(ectest_DEPENDENCIES) $(EXTRA_ectest_DEPENDENCIES) 
	@rm -f ectest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ectest_OBJECTS) $(ectest_LDADD) $(LIBS)
enginetest$(EXEEXT): $(enginetest_OBJECTS) $(enginetest_DEPENDENCIES) $(EXTRA_enginetest_DEPENDENCIES) 
	@rm -f enginetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(enginetest_OBJECTS) $(enginetest_LDADD) $(LIBS)
evptest$(EXEEXT): $(evptest_OBJECTS) $(evptest_DEPENDENCIES) $(EXTRA_evptest_DEPENDENCIES) 
	@rm -f evptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(evptest_OBJECTS) $(evptest_LDADD) $(LIBS)
explicit_bzero$(EXEEXT): $(explicit_bzero_OBJECTS) $(explicit_bzero_DEPENDENCIES) $(EXTRA_explicit_bzero_DEPENDENCIES) 
	@rm -f explicit_bzero$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(explicit_bzero_OBJECTS) $(explicit_bzero_LDADD) $(LIBS)
exptest$(EXEEXT): $(exptest_OBJECTS) $(exptest_DEPENDENCIES) $(EXTRA_exptest_DEPENDENCIES) 
	@rm -f exptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(exptest_OBJECTS) $(exptest_LDADD) $(LIBS)
gcm128test$(EXEEXT): $(gcm128test_OBJECTS) $(gcm128test_DEPENDENCIES) $(EXTRA_gcm128test_DEPENDENCIES) 
	@rm -f gcm128test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gcm128test_OBJECTS) $(gcm128test_LDADD) $(LIBS)
hmactest$(EXEEXT): $(hmactest_OBJECTS) $(hmactest_DEPENDENCIES) $(EXTRA_hmactest_DEPENDENCIES) 
	@rm -f hmactest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hmactest_OBJECTS) $(hmactest_LDADD) $(LIBS)
ideatest$(EXEEXT): $(ideatest_OBJECTS) $(ideatest_DEPENDENCIES) $(EXTRA_ideatest_DEPENDENCIES) 
	@rm -f ideatest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ideatest_OBJECTS) $(ideatest_LDADD) $(LIBS)
igetest$(EXEEXT): $(igetest_OBJECTS) $(igetest_DEPENDENCIES) $(EXTRA_igetest_DEPENDENCIES) 
	@rm -f igetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(igetest_OBJECTS) $(igetest_LDADD) $(LIBS)
md4test$(EXEEXT): $(md4test_OBJECTS) $(md4test_DEPENDENCIES) $(EXTRA_md4test_DEPENDENCIES) 
	@rm -f md4test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(md4test_OBJECTS) $(md4test_LDADD) $(LIBS)
md5test$(EXEEXT): $(md5test_OBJECTS) $(md5test_DEPENDENCIES) $(EXTRA_md5test_DEPENDENCIES) 
	@rm -f md5test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(md5test_OBJECTS) $(md5test_LDADD) $(LIBS)
mdc2test$(EXEEXT): $(mdc2test_OBJECTS) $(mdc2test_DEPENDENCIES) $(EXTRA_mdc2test_DEPENDENCIES) 
	@rm -f mdc2test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mdc2test_OBJECTS) $(mdc2test_LDADD) $(LIBS)
mont$(EXEEXT): $(mont_OBJECTS) $(mont_DEPENDENCIES) $(EXTRA_mont_DEPENDENCIES) 
	@rm -f mont$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mont_OBJECTS) $(mont_LDADD) $(LIBS)
pidwraptest$(EXEEXT): $(pidwraptest_OBJECTS) $(pidwraptest_DEPENDENCIES) $(EXTRA_pidwraptest_DEPENDENCIES) 
	@rm -f pidwraptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pidwraptest_OBJECTS) $(pidwraptest_LDADD) $(LIBS)
pkcs7test$(EXEEXT): $(pkcs7test_OBJECTS) $(pkcs7test_DEPENDENCIES) $(EXTRA_pkcs7test_DEPENDENCIES) 
	@rm -f pkcs7test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pkcs7test_OBJECTS) $(pkcs7test_LDADD) $(LIBS)
poly1305test$(EXEEXT): $(poly1305test_OBJECTS) $(poly1305test_DEPENDENCIES) $(EXTRA_poly1305test_DEPENDENCIES) 
	@rm -f poly1305test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(poly1305test_OBJECTS) $(poly1305test_LDADD) $(LIBS)
pq_test$(EXEEXT): $(pq_test_OBJECTS) $(pq_test_DEPENDENCIES) $(EXTRA_pq_test_DEPENDENCIES) 
	@rm -f pq_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pq_test_OBJECTS) $(pq_test_LDADD) $(LIBS)
randtest$(EXEEXT): $(randtest_OBJECTS) $(randtest_DEPENDENCIES) $(EXTRA_randtest_DEPENDENCIES) 
	@rm -f randtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randtest_OBJECTS) $(randtest_LDADD) $(LIBS)
rc2test$(EXEEXT): $(rc2test_OBJECTS) $(rc2test_DEPENDENCIES) $(EXTRA_rc2test_DEPENDENCIES) 
	@rm -f rc2test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rc2test_OBJECTS) $(rc2test_LDADD) $(LIBS)
rc4test$(EXEEXT): $(rc4test_OBJECTS) $(rc4test_DEPENDENCIES) $(EXTRA_rc4test_DEPENDENCIES) 
	@rm -f rc4test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rc4test_OBJECTS) $(rc4test_LDADD) $(LIBS)
rmdtest$(EXEEXT): $(rmdtest_OBJECTS) $(rmdtest_DEPENDENCIES) $(EXTRA_rmdtest_DEPENDENCIES) 
	@rm -f rmdtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rmdtest_OBJECTS) $(rmdtest_LDADD) $(LIBS)
sha1test$(EXEEXT): $(sha1test_OBJECTS) $(sha1test_DEPENDENCIES) $(EXTRA_sha1test_DEPENDENCIES) 
	@rm -f sha1test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha1test_OBJECTS) $(sha1test_LDADD) $(LIBS)
sha256test$(EXEEXT): $(sha256test_OBJECTS) $(sha256test_DEPENDENCIES) $(EXTRA_sha256test_DEPENDENCIES) 
	@rm -f sha256test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha256test_OBJECTS) $(sha256test_LDADD) $(LIBS)
sha512test$(EXEEXT): $(sha512test_OBJECTS) $(sha512test_DEPENDENCIES) $(EXTRA_sha512test_DEPENDENCIES) 
	@rm -f sha512test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha512test_OBJECTS) $(sha512test_LDADD) $(LIBS)
shatest$(EXEEXT): $(shatest_OBJECTS) $(shatest_DEPENDENCIES) $(EXTRA_shatest_DEPENDENCIES) 
	@rm -f shatest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shatest_OBJECTS) $(shatest_LDADD) $(LIBS)
ssltest$(EXEEXT): $(ssltest_OBJECTS) $(ssltest_DEPENDENCIES) $(EXTRA_ssltest_DEPENDENCIES) 
	@rm -f ssltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ssltest_OBJECTS) $(ssltest_LDADD) $(LIBS)
timingsafe$(EXEEXT): $(timingsafe_OBJECTS) $(timingsafe_DEPENDENCIES) $(EXTRA_timingsafe_DEPENDENCIES) 
	@rm -f timingsafe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timingsafe_OBJECTS) $(timingsafe_LDADD) $(LIBS)
utf8test$(EXEEXT): $(utf8test_OBJECTS) $(utf8test_DEPENDENCIES) $(EXTRA_utf8test_DEPENDENCIES) 
	@rm -f utf8test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utf8test_OBJECTS) $(utf8test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aeadtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aes_wrap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arc4randomforktest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asn1test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/base64test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bftest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/biotest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bntest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/casttest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chachatest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cts128test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/destest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dhtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dsatest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecdhtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ecdsatest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ectest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enginetest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evptest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/explicit_bzero.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exptest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gcm128test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hmactest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ideatest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/igetest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/md4test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/md5test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mdc2test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memmem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pidwraptest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pkcs7test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poly1305test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pq_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/randtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rc2test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rc4test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmdtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sha1test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sha256test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sha512test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shatest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ssltest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timingsafe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utf8test.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
